version: '3'
services:

##---- Infrastructure services ----##
  jaeger:
    image: jaegertracing/all-in-one:1.6
    container_name: jaeger
    restart: on-failure
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - "5775:5775"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"

  zookeeper:
    image: zookeeper:3.5
    container_name: zookeeper
    restart: on-failure
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka:2.11-2.0.0
    container_name: kafka
    restart: on-failure
    hostname: kafka
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "anair.publish:1:1"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=1099"
      JMX_PORT: 1099
    ports:
      - 9092:9092
      - 9094:9094

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: on-failure
    ports:
      - 9090:9090
    volumes:
      - ./metrics/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter

  node-exporter:
    image: prom/node-exporter:latest
    container_name: monitoring_node_exporter
    restart: unless-stopped
    expose:
      - 9100

  cadvisor:
    image: google/cadvisor:latest
    container_name: monitoring_cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 28080

  grafana:
    image: grafana/grafana
    container_name: grafana
    user: "104"
    restart: on-failure
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./metrics/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./metrics/grafana/grafana.env

##---- Microservices ----##
  service-admin:
    build: anair-service-admin
    container_name: anair-service-admin
    ports:
      - 18080:18080

  service-a:
    build: anair-service-a
    container_name: anair-service-a
    environment:
      - SPRING_BOOT_ADMIN_CLIENT_URL=http://service-admin:18080/admin
      - BASEURL_SERVICE_C=http://service-c:8082/anair-service-c
      - OPENTRACING_JAEGER_UDP-SENDER_HOST=jaeger
      - SPRING.KAFKA.BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    ports:
      - 8080:8080

  service-b:
    build: anair-service-b
    container_name: anair-service-b
    environment:
      - SPRING_BOOT_ADMIN_CLIENT_URL=http://service-admin:18080/admin
      - OPENTRACING_JAEGER_UDP-SENDER_HOST=jaeger
      - SPRING.KAFKA.BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    ports:
      - 8081:8081

  service-c:
    build: anair-service-c
    container_name: anair-service-c
    environment:
      - SPRING_BOOT_ADMIN_CLIENT_URL=http://service-admin:18080/admin
      - OPENTRACING_JAEGER_UDP-SENDER_HOST=jaeger
    ports:
      - 8082:8082

volumes:
  prometheus_data: {}
  grafana_data: {}

